version: 0.2

env:
  variables:
    TERRAFORM_VERSION: "1.0.9"
    PNPM_VERSION: "6"
    HUSKY: "0"
  shell: bash

phases:
  install:
    runtime-versions:
      nodejs: 14
    commands:
      - echo ==== tool versions ====
      - aws --version
      - git --version
      - echo ==== install terraform ====
      - curl "https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip" -o terraform.zip
      - unzip terraform.zip
      - install terraform /usr/local/bin
      - rm terraform.zip terraform
      - terraform -version
      - echo ==== install pnpm ====
      - npm i -g "pnpm@${PNPM_VERSION}"
      - pnpm --version
      - echo ==== download GitHub GPG public key ====
      - export GH_GPG_PUB_FILE="$(pwd)/github-web-flow.gpg"
      - curl https://github.com/web-flow.gpg -o "$GH_GPG_PUB_FILE"
      - gpg --import "$GH_GPG_PUB_FILE"
      - echo ==== environment variables ====
      - echo "AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION"
      - echo "AWS_ACCOUNT_ID=$AWS_ACCOUNT_ID"
      - echo "INFRA_GIT_URL=$INFRA_GIT_URL"
      - echo "INFRA_GIT_FETCH=$INFRA_GIT_FETCH"
      - echo "INFRA_TRUSTED_MERGER_GITHUB_EMAILS=$INFRA_TRUSTED_MERGER_GITHUB_EMAILS"
      - echo ==== info ====
      - pwd
      - whoami
      - echo ==== finished ====
  pre_build:
    commands:
      - echo ==== git clone main repository ====
      - mkdir main || true
      - cd main
      - git init || true
      - git reset --hard HEAD || true
      - git clean -xdf || true
      - git remote remove origin || true
      - git remote add origin "$INFRA_GIT_URL"
      - git fetch origin "$INFRA_GIT_FETCH"
      - git checkout FETCH_HEAD
      - echo ==== git commit verify ====
      - git show -s HEAD
      - 'echo "INFO: Check whether signed by GitHub GPG."'
      - test "$(git show -s --format='%GP' HEAD)" = "5DE3E0509C47EA3CF04A42D34AEE18F83AFDEB23"
      - git verify-commit HEAD
      - export AUTHOR_EMAIL="$(git show -s --format='%ae' HEAD)"
      - echo "AUTHOR_EMAIL=$AUTHOR_EMAIL"
      - 'echo "INFO: Check whether the inputs are 1 line string."'
      - test "$(echo "$INFRA_TRUSTED_MERGER_GITHUB_EMAILS" | wc -l)" = 1
      - test "$(echo "$AUTHOR_EMAIL" | wc -l)" = 1
      - 'echo "INFO: Verify the email is in trusted list."'
      - 'echo "INFO: List is separated by commas."'
      - |
        awk '
          NR == 1 {
            split($0, emails, ",")
          }
          NR == 2 {
            author_email = $0
          }
          END {
            for (i=1; i in emails; i++) {
              if (author_email == emails[i]) {
                print "ok"
                exit 0
              }
            }
            print "no email matched"
            exit 1
          }
        ' <(echo "$INFRA_TRUSTED_MERGER_GITHUB_EMAILS") <(echo "$AUTHOR_EMAIL")
      - echo ==== pnpm store status ====
      - pnpm store status || true
      - echo ==== pnpm install ====
      - pnpm install --recursive --frozen-lockfile --prefer-offline
      - echo ==== finished ====
  build:
    commands:
      - echo ==== terraform operation ====
      - pnpm exec ts-node -T ./pkg/shared/scripts/operate-env.ts
      - echo ==== finished ====
  post_build:
    commands:
      - echo ==== output ====
      - echo "!output=rev=$(git rev-parse HEAD)"
      - echo ==== finished ====

cache:
  paths:
    - "main/.git/**/*"
    - "/root/.pnpm-store/**/*"
